{
  "swagger": "2.0",
  "info": {
    "title": "health.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Health"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/health/check/{service}": {
      "get": {
        "summary": "Check will check the health of various API services and plugins",
        "operationId": "Health_Check",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fmtrpcHealthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "description": "the name of the service or plugin for which we want health information. Leave blank or put all to get all health information",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Health"
        ]
      }
    }
  },
  "definitions": {
    "HealthUpdateHealthState": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SERVING",
        "NOT_SERVING",
        "SERVICE_UNKNOWN"
      ],
      "default": "UNKNOWN"
    },
    "fmtrpcHealthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fmtrpcHealthUpdate"
          },
          "title": "the current states of all given services/plugins"
        }
      }
    },
    "fmtrpcHealthUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "the name of the service"
        },
        "state": {
          "$ref": "#/definitions/HealthUpdateHealthState",
          "title": "the current state of the service"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
