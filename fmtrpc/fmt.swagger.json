{
  "swagger": "2.0",
  "info": {
    "title": "fmt.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Fmt"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/admin/test": {
      "get": {
        "summary": "fmtcli: `admin-test`\nAdminTest will send a string response if the proper macaroon is provided.",
        "operationId": "Fmt_AdminTest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fmtrpcAdminTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Fmt"
        ]
      }
    },
    "/v1/bake/macaroon": {
      "post": {
        "summary": "fmtcli: `bake-macaroon`\nBakeMacaroon will bake a new macaroon based on input permissions and constraints.",
        "operationId": "Fmt_BakeMacaroon",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fmtrpcBakeMacaroonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fmtrpcBakeMacaroonRequest"
            }
          }
        ],
        "tags": [
          "Fmt"
        ]
      }
    },
    "/v1/stop": {
      "post": {
        "summary": "fmtcli: `stop`\nStopDaemon will send a shutdown request to the interrupt handler, triggering\na graceful shutdown of the daemon.",
        "operationId": "Fmt_StopDaemon",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fmtrpcStopResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fmtrpcStopRequest"
            }
          }
        ],
        "tags": [
          "Fmt"
        ]
      }
    },
    "/v1/test": {
      "get": {
        "summary": "fmtcli: `test`\nTestCommand will send a string response regardless if a macaroon is provided or not.",
        "operationId": "Fmt_TestCommand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fmtrpcTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Fmt"
        ]
      }
    }
  },
  "definitions": {
    "fmtrpcAdminTestResponse": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string",
          "title": "A short message indicating success or failure"
        }
      }
    },
    "fmtrpcBakeMacaroonRequest": {
      "type": "object",
      "properties": {
        "timeout": {
          "type": "string",
          "format": "int64",
          "title": "The length of time for which this macaroon is valid"
        },
        "timeout_type": {
          "$ref": "#/definitions/fmtrpcTimeoutType",
          "title": "The unit for the macaroon timeout. Choose from `SECOND`, `MINUTE`, `HOUR` or `DAY`"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fmtrpcMacaroonPermission"
          },
          "title": "The list of permissions the new macaroon should grant"
        },
        "plugins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of plugin names to be included in the macaroon"
        }
      }
    },
    "fmtrpcBakeMacaroonResponse": {
      "type": "object",
      "properties": {
        "macaroon": {
          "type": "string",
          "title": "The hex-encoded macaroon, serialized in binary format"
        }
      }
    },
    "fmtrpcMacaroonPermission": {
      "type": "object",
      "properties": {
        "entity": {
          "type": "string",
          "title": "The entity a permission grants access to"
        },
        "action": {
          "type": "string",
          "title": "The action that is granted"
        }
      }
    },
    "fmtrpcStopRequest": {
      "type": "object"
    },
    "fmtrpcStopResponse": {
      "type": "object"
    },
    "fmtrpcTestResponse": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string",
          "title": "A short message indicating success or failure"
        }
      }
    },
    "fmtrpcTimeoutType": {
      "type": "string",
      "enum": [
        "SECOND",
        "MINUTE",
        "HOUR",
        "DAY"
      ],
      "default": "SECOND"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
